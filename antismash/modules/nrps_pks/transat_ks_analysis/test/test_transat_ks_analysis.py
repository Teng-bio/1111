# License: GNU Affero General Public License v3 or later
# A copy of GNU AGPL v3 should have been included in this software package in LICENSE.txt.

# for test files, silence irrelevant and noisy pylint warnings
# pylint: disable=no-self-use,protected-access,missing-docstring

import unittest

from antismash.modules.nrps_pks.transat_ks_analysis import transat_ks_analysis


class TestKScalls(unittest.TestCase):
    query_ks = {'nrpspksdomains_ctg1_11_PKS_KS.1': 'IAIVGMGGIVPQAVDLDQFWDGLISGRSFIEELPKTHPEYDLYGKVFGDQKVWGGFIKEVDEFDASFFNISPREAEQMDPRQRLLLQLVWQTLEHAGHIPGDFSAGSMGVYIGMVGYSDYGELARYYNQNIEGHTLSGVSASIIANRISYFFDFKGPSITTDTACSSSLVGLLQAVSAIRSGQCEAALAGGINLMLSPFYHRAIQEIGILSEDGCCRTFDKAANGCVRGEGGGLLLLRPLDKALADHDTIYGIIKGSAENHGGTTNSLTAPSSEAQANLLEEAYRESMIPPSKVGYIEVHGTGTRLGDPAEINGLKEAFRKLHNQYDEPLSETVSCGLGAVKTNIGHLEPAAGVMGVMKVLLAMRHKQLPPTINFIEQNPYIEIENTPFYLVTRAQDWQSPKDDEGGMLARCAGVSSFGFGGANAHIVLEEY',
                'nrpspksdomains_ctg1_11_PKS_KS.2': 'IAIIGLSGRYPEAENVNEFWDNLKTSKNCIREIPQERWDWKQYFDEEKGKAGKIYTKWGGFLKEVDKFDPLFFQISPRDAEQMDPQERLFLEEAYKSIEDSGYTPETLCKSRKIGVFVGVMNGTYAPQTRFFSMANRISYHLNFQGPSMAVDTACSASLTAIHLALESLYSGMSECAIAGGVNLILRPIHYMGLSAMTMLSSTNENRSFGDHADGFVDGEGVGAVVLKSLKAAIADDDHIYGILKGSVVNAGGKTNGYTVPNPNAQYELVLEALKRSGIDARAVSCIEAHGTGTVLGDPIEVSGLARAFEHYSKDRQFCTIGSVKSNIGHCESAAGIAGVTKVLLQMQQGQIVPSLHSKRLNPNIDFSNTPFVVQQELENWNRPVLKVDGQKKEYPRIAGISSFGAGGANAHVVIEEY',
                'nrpspksdomains_ctg1_11_PKS_KS.3': 'IAIVGLSGRYPQAPDLAAYWQNLRNGKDCITEVPPDRWDWKKYYTEDRNQGGRHYSKWGGFIEDVDKFDPLFFNISPREAELIDPQERLFLEHVWMALEDAGYRGEDLQGEAGEYLGGQVGVYAGVMYGEYQLFAAEESVRGNPLSVGGSYASIANRISYVLNLHGPSMSIDTMCSSSLTALHLACQDLKLGRTNLGVAGGVNVTIHPNKYLMLSNGQFISSGGHCESFGKGGDGYIPGEGVGVALLKRLSDAQRDGDHIYGVIKGSGLNHGGKTHGYSVPNPKAQQTVISRALKESGIRPGAISYIEAHGTGTKLGDPIEITGLSKAFGSEVQRGSCFIGSAKSNIGHCESAAGIAGVTKVLLQMKYGQIVPSLHSQVLNPNIDFSQTPFVVQQELKEWFRPLLKLNGTRKEYPRIAGVSSFGAGGANAHLVIEEY',
                'nrpspksdomains_ctg1_12_PKS_KS.1': 'IAIVGMAGKYPGAKDLEEYWKNLVGGKNSIQEVPLSRWDVNQYYDPAPSKPGKVNCKWLGLLDDIDCFDPLFFMISPAEAEEMDPQHRIFLEEGHKAFESAGYSSSGLSNKKCGVYLGIMSNEYSLLAIEAQRSMSGTSNNYAIGAARMAYYLNLKGPAIPIDTACSSSLVGTHLACQALHAGEIDMALVGGVTLYLTAESYIDMCASGMLSAEGQCKTFDDSADGFVPGEGVGAIVLKRLSEAQRNDDCILGTIIGSGINQDGKTNGITAPSVKSQIELEREIYRKYKIDPSSISYVETHGTGTKLGDPIELEALSTVFKEQTDRKNYCALGSVKSNIGHTSAAAGVASMHKALLSLKHQKLVPTLNFKKPNSHFNFDESPFYVNTELKRWESEGEKPRRVGVSSFGFSGTNAHVVIEEY',
                'nrpspksdomains_ctg1_12_PKS_KS.2': 'IAIIGLSGRYPQAYNVEEYWNHLKTGKDCITEIPRDRWSLEGFFHEDFEEAVAQGKSYSKWGGFLEGFSEFDPLFFNISSHEAMSMDPQERLFLQTCWEVCEDGGYTREKIAIQHHGKVGVFAGITKTGFDLYGPELWKKGEPVFPHTSFSSVANRVSYLLNLKGPSMPIDTMCSSSLTAIHEACKHVDQGECELAIAGGVNLYLHPSTYRGLCAQRMLALDRQCRSFGKGGNGFVPGEGVGAVLLKRLSQALFDGDHIYGVIRGTSANHGGKTNGYTVSNPKVQAELIRETLDKTGIDARTVSYIEAHGTATELGDPIEVAGLSQAFQQDTVDTGFCALGSAKSNVGHLEAAAGMAGVTKILLQMKHKVLVPSLHAKELNPNINFSKTPFVVQQELGEWRSPFLERDGAGKEYPRIAGISSFGAGGANAHVIIEEY'}

    def test_transpact(self):
        results = run_transpact_ks_analysis(query_ks)
        
        assert 'glycine' in results['nrpspksdomains_ctg1_11_PKS_KS.1'].predictions
        assert results['nrpspksdomains_ctg1_11_PKS_KS.1'].predictions['glycine'][1].clade == 'Clade_30'
        assert results['nrpspksdomains_ctg1_11_PKS_KS.1'].predictions['glycine'][1].mass_score == 1.0

        assert 'aMe_eDB' in results['nrpspksdomains_ctg1_11_PKS_KS.2'].predictions
        assert results['nrpspksdomains_ctg1_11_PKS_KS.2'].predictions['aMe_eDB'][1].clade == 'Clade_47'
        assert results['nrpspksdomains_ctg1_11_PKS_KS.2'].predictions['aMe_eDB'][1].mass_score == 1.0
        
        assert 'eDB' in results['nrpspksdomains_ctg1_11_PKS_KS.3'].predictions
        assert results['nrpspksdomains_ctg1_11_PKS_KS.3'].predictions['eDB'][1].clade == 'Clade_62'
        assert results['nrpspksdomains_ctg1_11_PKS_KS.3'].predictions['eDB'][1].mass_score == 1.0
        
        assert 'b_MeeDB' in results['nrpspksdomains_ctg1_12_PKS_KS.1'].predictions
        assert results['nrpspksdomains_ctg1_12_PKS_KS.1'].predictions['b_MeeDB'][1].clade == 'Clade_82'
        assert results['nrpspksdomains_ctg1_12_PKS_KS.1'].predictions['b_MeeDB'][1].mass_score == 1.0
        
        assert 'clade_not_conserved' in results['nrpspksdomains_ctg1_12_PKS_KS.2'].predictions
        assert results['nrpspksdomains_ctg1_12_PKS_KS.2'].predictions['clade_not_conserved'][1].clade == 'NA'
        assert results['nrpspksdomains_ctg1_12_PKS_KS.2'].predictions['clade_not_conserved'][1].mass_score == 0.0
